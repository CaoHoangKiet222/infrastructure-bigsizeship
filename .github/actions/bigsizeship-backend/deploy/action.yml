name: Deploy swarm stack services
description: Deploy swarm stack services

inputs:
  IMAGE_NAME:
    description: "The Docker image tag to deploy"
    required: true
  STACK_NAME:
    description: "The stack name to use when deploy"
    required: true
  PROJECT_NAME:
    description: "PROJECT NAME (Ex: bigsizeship-backend)"
    required: true
  SSH_HOST:
    description: "The hostname or IP address of the SSH server to connect to"
    required: true
  SSH_USERNAME:
    description: "The username used for SSH authentication"
    required: true
  SSH_PASSWORD:
    description: "The password used for SSH authentication"
    required: true
  SSH_PORT:
    description: "The port number used for SSH connections (default is typically 22)"
    required: false
    default: 22
  ENV:
    type: choise
    description: "Optional environment"
    required: false
    options:
      - stag
      - prod

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Copy files to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ inputs.SSH_HOST }}
        username: ${{ inputs.SSH_USERNAME }}
        password: ${{ inputs.SSH_PASSWORD }}
        port: ${{ inputs.SSH_PORT }}
        source: "./docker-swarm/${{ inputs.PROJECT_NAME }}/*"
        target: "~/app/${{ inputs.PROJECT_NAME }}"

    - name: Deploy in VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ inputs.SSH_HOST }}
        username: ${{ inputs.SSH_USERNAME }}
        password: ${{ inputs.SSH_PASSWORD }}
        port: ${{ inputs.SSH_PORT }}
        script: |
          echo ${{ github.token }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker pull ${{ inputs.IMAGE_NAME }}
          cd ~/app/${{ inputs.PROJECT_NAME }}
          
          # Add commands to run tests on the deployed services
          docker_compose_yml="docker-compose.${{ inputs.ENV }}.yml"
          compose_files=(
            "./docker-swarm/${{ inputs.PROJECT_NAME }}/global/efk/fluent-bit/docker-compose.yml"
            $([ ${{ inputs.ENV }} == "stag" ] && echo "./docker-swarm/${{ inputs.PROJECT_NAME }}/postgres/docker-compose.yml")
            "./docker-swarm/${{ inputs.PROJECT_NAME }}/global/redis/docker-compose.yml"
            "./docker-swarm/${{ inputs.PROJECT_NAME }}/strapi/${{ inputs.ENV }}/docker-compose.yml"
          )

          compose_yml=""
          for file in "${compose_files[@]}"; do
            compose_yml="${compose_yml:+${compose_yml} }-c ${file}"
          done
          echo "Compose yml files: ${compose_yml}"

          docker stack deploy -c ./docker-swarm/${{ inputs.PROJECT_NAME }}/${{ inputs.ENV }}/reverse-proxy-traefik/docker-compose.yml --prune ${{ inputs.STACK_NAME }}_proxy

          docker stack config ${compose_yml} > ${docker_compose_yml}

          docker stack deploy -c ${docker_compose_yml} --prune --with-registry-auth ${{ inputs.STACK_NAME }}

          docker service ls
