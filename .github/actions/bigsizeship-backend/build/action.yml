name: Build, tag, push docker image
description: Build, tag & push docker image

inputs:
  PROJECT_NAME:
    description: 'PROJECT NAME (Ex: bigsizeship-backend)'
    required: true
  PUBLISH_TO_GITHUB_CR:
    type: boolean
    description: "Whether to publish the image to Github Container Registry"
    required: false
    default: false
  DOCKER_CONTEXT:
    description: "Optional input to set docker context"
    required: false
    default: "."
  DOCKER_PLATFORMS:
    description: "Optional input list to set docker target platforms for build"
    required: false
    default: "linux/amd64"
  NO_CACHE:
    description: "Optional input to not use cache when building the image"
    required: false
    default: "false"
  ENV:
    type: choise
    description: "Optional environment"
    required: false
    options: 
      - stag
      - prod

outputs: 
  image-tag:
    description: "Output image tag"
    value: ${{ steps.image-tag.outputs.image-tag }}

runs: 
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU 
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Github container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
#        password: ${{ secrets.GITHUB_TOKEN }}
        password: ${{ github.token }}

    - name: Extract Docker metadata
      id: github-metadata
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=semver,pattern={{ version }},value=${{ inputs.version }}
          type=ref,prefix=,suffix=-{{ sha }},event=tag
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/') }}
        flavor: |
          latest=false

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.DOCKER_CONTEXT }}
        platforms: ${{ inputs.DOCKER_PLATFORMS }}
        push: ${{ inputs.PUBLISH_TO_GITHUB_CR }}
        tags: ${{ steps.github-metadata.outputs.tags }}
        labels: ${{ steps.github-metadata.outputs.labels }}
        no-cache: ${{ inputs.NO_CACHE }}
        file: ${{ inputs.DOCKER_CONTEXT }}/build/Dockerfiles/${{ env.PROJECT_NAME }}/Dockerfile
        # use layer caching. Don't forget mode=max to also cache the build image
        # (vs only the final image - mode: min)
        cache-from: type=gha
        cache-to: type=gha,mode=max,ignore-error=true

    - name: Output image tag
      id: image-tag
      shell: bash
      run: echo "image-tag=${{ steps.github-metadata.outputs.tags }}" >> $GITHUB_OUTPUT
