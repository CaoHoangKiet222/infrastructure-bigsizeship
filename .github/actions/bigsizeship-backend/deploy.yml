name: Cloud Run Deploy

inputs:
  image_tag:
    description: The Docker image tag to deploy
    required: false
    default: latest
  stack_name:
    description: The service to use in Cloud Run (will be created if not exists)
    required: true
  env:
    type: choise
    description: "Optional environment"
    required: false
    options: 
      - stag
      - prod

env:
  PROJECT_NAME: "bigsizeship-backend"
  DOCKERCOMPOSE_FILE: "docker-compose.yml"

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Setup vars
        id: vars
        run: |
          echo "::set-output name=stack_name::${{ github.event.inputs.stack_name }}"
          echo "::set-output name=tag::${{ github.event.inputs.tag }}"
          echo "::set-output name=env::${{ github.event.inputs.env }}"

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker Image
        id: pull
        run: |
          image=ghcr.io/${{ github.repository }}

          docker pull $image:${{ steps.vars.outputs.tag }}
          echo "::set-output name=img::$image"

      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Run/Update services 
        run: |
          # Add commands to run tests on the deployed services
          COMPOSE_FILES=(
              "$PWD/docker-swarm/${{ env.PROJECT_NAME }}/global/efk/fluent-bit/docker-compose.yml"
              $([ ${{ steps.vars.outputs.env }} == "stag" ] && echo "$PWD/docker-swarm/${{ env.PROJECT_NAME }}/postgres/docker-compose.yml")
              "$PWD/docker-swarm/${{ env.PROJECT_NAME }}/global/redis/docker-compose.yml"
              "$PWD/docker-swarm/${{ env.PROJECT_NAME }}/strapi/${{ steps.vars.outputs.env }}/docker-compose.yml"
          )

          COMPOSE_YML=""
          for FILE in "${COMPOSE_FILES[@]}"; do
              COMPOSE_YML="${COMPOSE_YML:+${COMPOSE_YML} }-c ${FILE}"
          done
          echo "Compose yml files: ${COMPOSE_YML}"

          docker stack deploy -c $PWD/docker-swarm/${{ env.PROJECT_NAME }}/${{ steps.vars.outputs.env }}/reverse-proxy-traefik/docker-compose.yml --prune ${{ steps.vars.outputs.stack_name }}_proxy

          docker stack config ${COMPOSE_YML} > ${{ env.DOCKERCOMPOSE_FILE }}

          docker stack deploy -c ${DOCKERCOMPOSE_FILE} --prune --with-registry-auth ${{ steps.vars.outputs.stack_name }}

          docker service ls